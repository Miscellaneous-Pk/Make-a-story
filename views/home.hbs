<!doctype html>

<html lang="en">

    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous">

        <style type="text/css">
            /* width */

            ::-webkit-scrollbar {
                width: 1px;
                height: 0px;
            }

            /* Track */

            ::-webkit-scrollbar-track {
                background: #f1f1f1;
            }

            /* Handle */

            ::-webkit-scrollbar-thumb {
                background: #888;
            }

            /* Handle on hover */

            ::-webkit-scrollbar-thumb:hover {
                background: #555;
            }

            .canvas-btn {

                cursor: pointer;
                position: relative;
                font-size: 80%;


            }

            bg-transparent {
                background-color: black !important;
            }

            canvas {
                position: absolute;
                left: 50%;
                transform: translate(-50%,0%);
                cursor: copy;
            }

            .saving-div {
              pointer-events: none;
            }

            @keyframes blink {
                /**
                 * At the start of the animation the dot
                 * has an opacity of .2
                 */
                0% {
                  opacity: .2;
                }
                /**
                 * At 20% the dot is fully visible and
                 * then fades out slowly
                 */
                20% {
                  opacity: 1;
                }
                /**
                 * Until it reaches an opacity of .2 and
                 * the animation can start again
                 */
                100% {
                  opacity: .2;
                }
            }

            .saving span {
                /**
                 * Use the blink animation, which is defined above
                 */
                animation-name: blink;
                /**
                 * The animation should take 1.4 seconds
                 */
                animation-duration: 1.4s;
                /**
                 * It will repeat itself forever
                 */
                animation-iteration-count: infinite;
                /**
                 * This makes sure that the starting style (opacity: .2)
                 * of the animation is applied before the animation starts.
                 * Otherwise we would see a short flash or would have
                 * to set the default styling of the dots to the same
                 * as the animation. Same applies for the ending styles.
                 */
                animation-fill-mode: both;
            }

            .saving span:nth-child(2) {
                /**
                 * Starts the animation of the third dot
                 * with a delay of .2s, otherwise all dots
                 * would animate at the same time
                 */
                animation-delay: .2s;
            }

            .saving span:nth-child(3) {
                /**
                 * Starts the animation of the third dot
                 * with a delay of .4s, otherwise all dots
                 * would animate at the same time
                 */
                animation-delay: .4s;
            }

            .bg-shadow {

                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);

            }

            .circleAndNo {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 80%;
                font-weight: bold;
                height: 1.7rem;
                width: 1.7rem;
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
                cursor: pointer;
            }

            .circleAndNo elem {

                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);

            }

            .circleAndNo span {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                height: 180%;
            }

            .fa-paint-brush {
                pointer-events: none;
            }

            textarea {
                resize: none;
            }

            .hover-pop {

                pointer-events: none;

            }

            .detailBox {
                position: absolute;
                display: none;
                cursor: pointer;
                z-index: 11;
            }

            .detailBox-text {

                position: relative;
                max-width: 100%;
                white-space: nowrap;
                overflow: hidden;

            }

            .span-No {
                min-width: 8.5%;
            }

            .detailBox-Big {

                top: 100%;
                left: 0%;
                /*								display: none;*/
                word-wrap: break-word;
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);

            }

            .deletecircleAndNo {

                cursor: pointer;

            }

            .setting-btn {

                position: relative;

            }

            .settings-btn span {

                position: absolute;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%);
                height: 1.5rem;

            }

            .box {

                height: 3rem;
                width: 4rem;
                position: relative;
                cursor: pointer;

            }

            .rtbt-subBox {

                right: 0px;
                bottom: 0px;

            }

            .ltbt-subBox {

                left: 0px;
                bottom: 0px;

            }

            .lttp-subBox {

                top: 0px;
                left: 0px;

            }

            .rttp-subBox {

                top: 0px;
                right: 0px;

            }

            .bgbt-subBox {

                bottom: 0px;

            }

            .custom-popover-header::before {
                width: 0rem !important;
            }

            .settings-btn {
                position: relative;
                cursor: pointer;
                font-size: 80%;
            }

            #overlay {

              top: 0px;
              left: 50%;
              transform: translate(-50%, 0);

            }

            .circles-here {
              /* top: 0%;
              left: 50%;
              transform: translate(-50%, 0%); */
            }

            .image {
            }

            .custom-hide {
                position: relative;
            }

            .overflow-hidden {
                overflow: hidden;
            }

            .ui-dialog-titlebar {
                display: none;
            }

            .logout-btn {
                cursor: pointer;
            }

            .check-label label {
                height: 0px;
            }

            .custom-control-input:checked~.custom-control-label::before {

                background-color: #18a2b9 !important;

            }

            .back-btn {
                cursor: pointer;
            }

            /*Story Board CSS here*/

            .card img {


                /* flex-shrink: 0; */
                max-width: 100%;

            }

            .grid-item a:hover {
                text-decoration: none;
            }

            .draft-badge {

                position: absolute;
                top: 0.5em;
                right: 0.5em;

            }

            .Draft {
              background-color: #DB3445;
              /* color: #E2E6EA; */
            }

            .Published {
              background-color: #28A645;
              /* color: #E2E6EA; */
            }

            .delete-badge {
              position: absolute;
              top: 0.5em;
              left: 0.5em;
              z-index: 1;
              cursor: pointer;
            }

            .modal-spinner {

                position: absolute;
                top: 0%;
                width: 100%;
                height: 100%;
                z-index: 1000;
                background-color: rgba(0, 0, 0, 0.4);

            }

            .spinner {

                position: fixed;
                z-index: 1000;
                top: 50%;
                left: 50%;
                width: 4rem;
                height: 4rem;
                border-radius: 50%;
                border: 0.2rem solid transparent !important;
                border-top: 0.1rem solid #ffc107 !important;
                border-right: 0.1rem solid #ffc107 !important;
                border-bottom: 0.1rem solid #ffc107 !important;
                margin-top: -2rem;
                margin-left: -2rem;
                pointer-events: none;
                animation: spin 2s linear infinite;

            }

            @keyframes spin {
                0% {
                    transform: rotate(0deg);
                }
                100% {
                    transform: rotate(360deg);
                }
            }

            .upload-btn-wrapper {

                cursor: pointer;
                /*				pointer-events: none;*/
            }

            .upload-btn-wrapper input[type=file] {

                position: absolute;
                top: -1000px;

            }

            .upload-textarea-wrapper .heading {

                z-index: 2;
                pointer-events: none;

            }

            .upload-btn-text {

                font-size: 200%;

            }

            .upload-textarea-wrapper textarea {

                font-size: 200%;
                z-index: 1;

            }

            .ok-btn {

                cursor: pointer;

            }

            .ok-btn-box {

                position: absolute;
                bottom: 0px;
                right: 0px;
                display: none;
                opacity: 0;
                z-index: 3;

            }

            .ok-btn-file {

                bottom: 0px;
                right: 0px;

            }

            .ok-btn-box label {

                height: 0px;

            }

            .ok-btn-box .error-span {

                display: none;

            }

            small {

                pointer-events: none;

            }

            #upload-error {

                display: none;

            }

            .preview-image-box {

                display: none;
                opacity: 0;

            }

            .card {
                cursor: pointer;
            }

            .small-elem {

                font-size: 80%;
            }

            #for-printing {
              position: relative;
              text-align: center;
              overflow: hidden;
            }


            #dialog-uploadImag {
              position: absolute;
              top: 0px;
              left: 0px;
              z-index: 11;
            }

            .blackish-overlay {
              background-color: black;
              opacity: 0;
              display: none;
              position: absolute;
              top: 0px;
            }

            .o-active {
              z-index: 11 !important;
            }

            .o-inactive {
              z-index: 9;
            }

            .img-block {
                background: transparent;
                z-index: 10;
            }

            .carry-menu {
              z-index: 12;
            }

            .menu-caption {
              right:200%;
              top:0px;
            }

            .menu-caption>span {

                font-family: Avenir-Black;
        				font-size: 61px;
        				color: #FFFFFF;
        				letter-spacing: 0.08px;
                white-space: nowrap;

            }

            .marker-circle {
              height: 44px;
              width: 44px;
              font-size: 100%;
              font-weight: bold;
              cursor: pointer;
            }

            .size-circle {
              height: 49px;
              width: 49px;
              font-size: 110%;
              font-weight: bold;
              cursor: pointer;
              top: 50%;
              left: 30%;
              transform: translate(-50%,-50%);
            }

            .size-canvas {
              cursor: pointer;
              height: 15px;
              width: 100%;
              top: 50%;
              left: 50%;
              transform: translate(-50%,-50%);
            }

            .size-svg {
              width: 346px;
            }

            .menu-btn>svg {
              cursor: pointer;
            }

            .text-black {
              color: #1C1B19 !important;
            }

            .disappear {
              opacity: 0;
            }

            .disappear>svg {
              cursor: default !important;
            }

            .bg-black {
              background-color: rgb(0,0,0,0.4) !important;
            }

            .mt-md-11 {
                margin-top: 1.05rem!important;
            }

            @media(max-width:767px){

              .menu-caption {

                left:0%;
                top:100%;
                width: 320px;
              }

              .menu-caption > span {
                white-space: normal;
              }

              .size-svg {
                width: 266px;
              }

              .mt-md-11 {
                  margin-top: 0rem!important;
              }

            }


        </style>

        <title>Home - Make a story</title>
    </head>

    <body class="bg-info text-light">

        <div class="btn-container dialog">

            <div class="d-flex flex-column">

                <div class="w-100 bg-dark bg-shadow p-4">

                    <div class="d-flex align-items-center justify-content-between mx-1">

                        <h1 class="display-4">{{name}}</h1>

                        <a href="/logout/{{token}}" class="text-light mr-2" alt=""><i class="fas fa-sign-out-alt" alt="Log Out"></i></a>

                    </div>

                    <div class="d-flex flex-wrap my-1">

                        <button type="button" class="open-btn btn btn-lg m-1 btn-info">Make a story now <i class="fas fa-plus"></i></button>

                        <div class="w-100"></div>

                        <button type="button" class="contribution-btn btn btn-sm m-1 btn-light">
                            Contributions <span class="badge badge-info">18</span>
                        </button>

                        <div class="w-100 d-sm-none"></div>

                        <button type="button" class="published-btn btn btn-sm m-1 btn-light">
                            Published <span class="badge badge-success">4</span>
                        </button>

                        <button type="button" class="drafts-btn btn btn-sm m-1 btn-light">
                            Drafts <span class="badge badge-danger">14</span>
                        </button>

                    </div>

                </div>

                <div class="grid pt-2">

                  {{#each pictures}}

                  <div class="grid-item col-6 col-sm-4 col-md-3 col-lg-2 px-1 pb-2">
                    <div class="badge text-secondary delete-badge"><i class="fas fa-trash"></i></div>
                    <div class="card p-0 bg-dark bg-shadow">

                      <div class="badge draft-badge {{status}}">{{status}}</div>
                      <img class="card-image-top rounded-top border border-dark" src="{{thumbnail}}"  data-id="{{_id}}" data-comments= "{{data}}" data-image={{image}}>
											<div class="card-body p-1">
												<h6 class="mt-1 card-text image-title">{{title}}</h6>
												<div class="mb-1"><small class="text-muted image-created">Created on {{dates}}</small></div>
											</div>
										</div>
				          </div>

                  {{/each}}


                </div>

            </div>

            <div class="blackish-overlay o-inactive"></div>

        </div>

        <div id="dialog-uploadImage" class="container dialog d-flex align-items-center justify-content-center">

            <div class="img-block col-lg-4 col-md-6 col-sm-8 col-12 bg-dark rounded text-light bg-shadow p-0 m-0">

                <div class="p-0 m-0 upload-image-box">

                    <div class="my-0 position-relative h-50 bg-dark rounded-top ">

                        <label class="position-absolute upload-btn-wrapper w-100 h-100 d-flex align-items-center justify-content-center flex-wrap">

                            <div class="upload-error-here text-light text-center">
                                <h5 class="upload-btn-text"><i class="fas fa-upload"></i></h5>
                                <small>Click here to upload your image</small>
                            </div>

                            <input id="imgInp" type="file" name="myfile"/>

                        </label>

                        <div class="preview-image-box position-absolute rounded-top bg-dark w-100 h-100 align-items-center justify-content-center">

                            <div class="position-relative w-50 h-50 d-flex align-items-center justify-content-center flex-wrap">

                                <img class="bg-light rounded p-1 text-dark" id="imgPreview" src="" alt="Image preview...">

                                <small class="my-1"><i class="text-success fas fa-check-circle"></i> Yep looks good.</small>

                            </div>

                            <div class="ok-btn-file position-absolute d-flex align-items-end">

                                <span class="change-upload-btn px-2 py-1 rounded mr-1 mb-1 bg-light text-dark "><small>Change</small></span>

                                <span class="next-upload-btn px-2 py-1 rounded mr-1 mb-1 bg-light text-dark"><small>Next</small></span>

                            </div>

                        </div>

                    </div>

                    <div class="my-0 position-relative upload-textarea-wrapper h-50 border border-dark rounded-bottom">

                        <div class="heading position-absolute w-100 h-100 text-light d-flex align-items-center justify-content-center">
                            <div class="text-dark text-center">
                                <h5 class="upload-btn-text"><i class="fas fa-clipboard"></i></h5>
                                <small>Paste the link to your image here</small>
                            </div>
                        </div>

                        <form class="validate-image-exists">

                            <textarea id="image-link" name="image-link" class="border border-light bg-light position-absolute w-100 h-100 rounded-bottom p-4"></textarea>


                            <div class="ok-btn-box d-flex align-items-end rounded m-1 bg-dark">

                                <span class="error-span px-2 py-1 text-light">

                                    <small>
                                        <label for="image-link" generated="true" class="error"></label>
                                    </small>

                                </span>

                                <span class="ok-btn px-2 py-1"><small>Next</small></span>

                            </div>

                        </form>

                    </div>

                </div>

            </div>

        </div>

        <div id="dialog-final" class="pt-0 d-flex flex-wrap align-items-stretch justify-content-center">

          <div class="position-fixed saving-div" style="z-index: 12">
            <div class="position-absolute text-right" style="right:20px; bottom:10px; z-index: 12">
              <small class="saving badge badge-pill badge-light saving-data shadow d-none">saving data <span>.</span><span>.</span><span>.</span> </small>
              <small class="saving badge badge-pill badge-light saving-image d-none">saving image <span>.</span><span>.</span><span>.</span></small>
              <small class="saving badge badge-pill badge-light saving-thumbnail d-none">saving thumbnail <span>.</span><span>.</span><span>.</span></small>
              <small class="badge badge-pill badge-success saving-done saving-badge"><i class="fas fa-check-circle"></i> Saved</small><br>
            </div>
          </div>

          <div class="img-block mt-md-3 col-lg-8 col-md-10 col-12 order-mdm-1 order-2 mx-0 p-0 rounded">

            <div class="" id="for-printing">

              <div class="circles-here position-absolute rounded border border-dark">
                <div class="detailBox bg-dark rounded"></div>
                <div class="circleAndNo rounded-circle bg-info text-light">
                    <span data-container="body" data-toggle="popover" data-placement="top" data-content="hello qasim"></span>
                    <elem></elem>
                </div>
                <canvas data-html2canvas-ignore class="" id="myCanvas"></canvas>
              </div>

              <img class="image bg-shadow border border-dark" id="blah" src="" alt="">

              <div class="position-relative mx-auto detailBox-Big">

                  <div class="d-flex flex-wrap bg-dark rounded-bottom border border-dark">

                  </div>

              </div>

            </div>

          </div>

          <div class="carry-menu d-flex align-items-center order-md-2 order-1 pt-md-3">

              <div class="d-md-block mx-auto d-flex justify-content-center col-md-12 col-11 mx-2 text-center align-items-center">

                <div class="menu-caption position-absolute d-none p-0 text-left rounded px-4">

                  <span></span>

                  <div class="text-posn d-none text-md-right text-left ml-2 pb-3">

                    <div class="col-12 px-0 text-md-right text-left"><section class="badge badge-light ">Press to change text position.</section></div>
                    <div class="col-12 my-2"></div>

                    <svg class="" width="170" viewBox="0 0 156 231" fill="none" xmlns="http://www.w3.org/2000/svg">
          					<path fill-rule="evenodd" clip-rule="evenodd" d="M1 1H155V230H1V1Z" fill="#D8D8D8" fill-opacity="0.58" stroke="#FFFBFB" stroke-width="2" stroke-linejoin="round"/>
          					<path fill-rule="evenodd" clip-rule="evenodd" d="M1 144H155V230H1V144Z" fill="#FFFFFF"/>
          					<path data-show-text="detailBox-Big" class="banner-lines" d="M139.5 160H72.5" stroke="black" stroke-width="5" stroke-linecap="round" stroke-linejoin="round"/>
          					<path class="banner-lines" d="M139.5 187H16.5" stroke="black" stroke-width="5" stroke-linecap="round" stroke-linejoin="round"/>
          					<path class="banner-lines" d="M111.5 213H16.5" stroke="black" stroke-width="5" stroke-linecap="round" stroke-linejoin="round"/>
          					<path data-show-text="detailBox left top" class="banner-inBox" fill-rule="evenodd" clip-rule="evenodd" d="M10 15C10 13.3431 11.3431 12 13 12H71C72.6569 12 74 13.3431 74 15V29C74 30.6569 72.6569 32 71 32H13C11.3431 32 10 30.6569 10 29V15Z" fill="#DADADA"/>
          					<path data-show-text="detailBox right top" class="banner-inBox" fill-rule="evenodd" clip-rule="evenodd" d="M82 15C82 13.3431 83.3431 12 85 12H143.187C144.844 12 146.187 13.3431 146.187 15V29.2428C146.187 30.8996 144.844 32.2428 143.187 32.2428H85C83.3431 32.2428 82 30.8996 82 29.2428V15Z" fill="#DADADA"/>
          					<path data-show-text="detailBox left bottom" class="banner-inBox" fill-rule="evenodd" clip-rule="evenodd" d="M10 116C10 114.343 11.3431 113 13 113H71C72.6569 113 74 114.343 74 116V130C74 131.657 72.6569 133 71 133H13C11.3431 133 10 131.657 10 130V116Z" fill="#DADADA"/>
          					<path data-show-text="detailBox right bottom" class="banner-inBox" fill-rule="evenodd" clip-rule="evenodd" d="M82 116C82 114.343 83.3431 113 85 113H143C144.657 113 146 114.343 146 116V130C146 131.657 144.657 133 143 133H85C83.3431 133 82 131.657 82 130V116Z" fill="#DADADA"/>
          					</svg>
                  </div>

                  <div class="marker-posn d-none text-left justify-content-md-end justify-content-start flex-wrap">

                    <div class="col-12 px-0 text-md-right text-left"><section class="badge badge-light ">Press to edit settings.</section></div>
                    <div class="col-12 my-2"></div>

                    <div class="marker-circle rounded-circle bg-info text-light border-light d-flex align-items-center justify-content-center mx-1 shadow">1</div>
                    <div class="marker-circle rounded-circle bg-warning text-dark border-light d-flex align-items-center justify-content-center mx-1 shadow">2</div>
                    <div class="marker-circle rounded-circle bg-light text-dark border-light d-flex align-items-center justify-content-center mx-1 shadow">3</div>
                    <div class="marker-circle rounded-circle bg-dark border-light text-light d-flex align-items-center justify-content-center mx-1 shadow">4</div>
                    <div class="col-12 my-2"></div>
                    <div class="marker-circle rounded-circle bg-primary border-light text-light d-flex align-items-center justify-content-center mx-1 shadow">5</div>
                    <div class="marker-circle rounded-circle bg-danger border-light text-light d-flex align-items-center justify-content-center mx-1 shadow">6</div>
                    <div class="marker-circle rounded-circle bg-success border-light text-light d-flex align-items-center justify-content-center mx-1 shadow">7</div>
                    <div class="col-12 my-2"></div>
                    <div class="position-relative d-flex justify-content-center">

                      <div class="position-absolute size-circle rounded-circle border border-dark bg-light text-black d-flex align-items-center justify-content-center mx-1 shadow">30</div>
                      <div class="position-absolute size-canvas"></div>

                      <svg class="size-svg" width="346" height="66" viewBox="0 0 346 66" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M5.5 33.5H340.5" stroke="#1C1B19" stroke-width="10" stroke-linecap="round"/>
                      <defs>
                      <filter id="filter0_d" x="14" y="0" width="66" height="66" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                      <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                      <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
                      <feOffset/>
                      <feGaussianBlur stdDeviation="5.5"/>
                      <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0"/>
                      <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"/>
                      <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
                      </filter>
                      </defs>
                      </svg>

                    </div>

                  </div>

                </div>

                <div class="menu-btn px-md-3 px-1 py-md-1 py-2 my-0" style="line-height:1px" ctr="-1">
                  <svg name="Text Position." width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 38C29.4934 38 38 29.4934 38 19C38 8.50659 29.4934 0 19 0C8.50659 0 0 8.50659 0 19C0 29.4934 8.50659 38 19 38Z" fill="white"/>
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M11.2728 27.5628L16.3857 10.3762C16.3983 10.3342 16.4373 10.3042 16.4801 10.3042H21.4449C21.4888 10.3042 21.5267 10.3332 21.5384 10.3762L26.7262 27.5608C26.7359 27.5938 26.7311 27.6278 26.7145 27.6508C26.6941 27.6788 26.6639 27.6948 26.6318 27.6948H22.5615C22.5177 27.6948 22.4788 27.6658 22.4671 27.6218L21.334 23.7472C21.2532 23.4722 21.0059 23.2821 20.7255 23.2821H17.0389C16.7536 23.2821 16.5034 23.4772 16.4275 23.7602L15.3839 27.6198C15.3722 27.6638 15.3323 27.6948 15.2885 27.6948H11.3673C11.3361 27.6948 11.305 27.6788 11.2884 27.6558C11.2699 27.6288 11.2641 27.5938 11.2728 27.5628ZM11.3673 29H15.2885C15.9009 29 16.4431 28.5759 16.6076 27.9688L17.5217 24.5873H20.2534L21.2502 27.9958C21.4216 28.5869 21.9609 29 22.5616 29H26.6318C27.063 29 27.4748 28.786 27.7357 28.4259C27.9898 28.0689 28.0667 27.6018 27.9401 27.1767L22.7514 9.98915C22.5723 9.39706 22.0475 9 21.4449 9H16.4801C15.8746 9 15.3479 9.40006 15.1707 9.99515L10.0589 27.1837C9.93329 27.6058 10.0112 28.0709 10.2682 28.4319C10.5271 28.788 10.9379 29 11.3673 29Z" fill="black"/>
                  <path d="M18.4204 20H19.5794C19.7121 20 19.8372 19.9129 19.9158 19.7647C19.9958 19.6174 20.0203 19.4261 19.9829 19.2492L19.4601 16.7688C19.4369 16.6565 19.4124 16.5424 19.3886 16.4248C19.3364 16.1706 19.1604 15.9991 18.978 16C18.7878 16.0036 18.6234 16.185 18.577 16.4419C18.5512 16.5784 18.5267 16.7122 18.5003 16.8406L18.0156 19.2564C17.9801 19.4324 18.0059 19.6219 18.0852 19.7683C18.1645 19.9138 18.2889 20 18.4204 20" stroke="black"/>
                  </svg>
                </div>

                <div class="menu-btn px-md-3 px-1 py-md-1 py-2 my-0" style="line-height:1px">
                  <svg name="Marker Settings." width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 38C29.4934 38 38 29.4934 38 19C38 8.50659 29.4934 0 19 0C8.50659 0 0 8.50659 0 19C0 29.4934 8.50659 38 19 38Z" fill="white"/>
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M9.19246 25.3488C9.21135 25.3535 9.23024 25.3582 9.24834 25.3621L10.7799 23.2433C10.8059 23.2237 10.8311 23.201 10.8531 23.1752L12.6035 21.1746C12.7239 21.3945 12.8915 21.5612 13.1032 21.6724C13.8761 22.0755 14.8386 21.4736 14.9464 21.4039C14.9645 21.3914 14.9819 21.3781 14.9992 21.364C15.5713 20.8693 15.8366 20.802 15.9106 20.7942C16.0302 20.9859 16.005 21.7295 15.8547 22.3737C15.8476 22.4034 15.8429 22.4332 15.8413 22.4629C15.798 23.3725 16.0349 24.0636 16.5449 24.5152C17.1808 25.078 18.0269 25.0522 18.3063 25.0256C19.2838 25.1923 19.9583 25.5445 20.3116 26.0744C20.6524 26.5855 20.6005 27.146 20.5714 27.3268L19.4372 29.127C19.4365 29.1278 19.4357 29.1278 19.4349 29.1286C18.965 29.5685 18.1709 30.5923 17.4374 29.9583C17.1131 29.6781 17.0942 29.1129 16.7165 28.8265C16.3843 28.5752 16.1278 28.5838 15.7272 28.5736C15.484 28.6621 15.2392 28.6613 14.9945 28.5697C14.693 28.6277 14.5238 28.5181 14.4845 28.241C14.3058 28.0625 14.3082 27.8606 14.1035 27.6813C13.81 27.4246 13.4558 27.362 13.0812 27.3596C12.8341 27.3581 12.5405 27.4849 12.2997 27.4457C11.2513 27.2751 11.7904 27.009 11.3324 26.6419C10.5666 26.0274 9.83389 26.274 9.0382 26.6513C9.02167 26.6591 9.00514 26.6669 8.98862 26.6748C8.98626 26.6591 8.98468 26.6442 8.98311 26.6294C8.92015 26.1965 8.91228 25.777 9.19246 25.3488ZM17.3154 16.1753L24.1248 21.0321L21.3497 25.9163C21.3222 25.8552 21.2923 25.7934 21.2584 25.7324C21.2254 25.6705 21.1884 25.6087 21.1482 25.5476C21.0821 25.4459 21.0082 25.3496 20.9279 25.2572C20.8507 25.168 20.7681 25.0843 20.6792 25.0036C20.2746 24.6373 19.7418 24.3626 19.0839 24.1849C18.8651 24.1246 18.6313 24.0761 18.385 24.0378C18.3598 24.0339 18.3346 24.0323 18.3094 24.0323C18.2811 24.0323 18.2528 24.0346 18.2252 24.0393C18.2252 24.0393 18.2221 24.0401 18.2166 24.0409C18.2055 24.0417 18.1851 24.044 18.1575 24.0464C18.1434 24.0472 18.1276 24.0479 18.1103 24.0487C18.0922 24.0495 18.0733 24.0503 18.0529 24.0503C17.9907 24.0511 17.9159 24.0487 17.8341 24.0393C17.6814 24.0205 17.5067 23.9775 17.3492 23.8859C17.2973 23.8554 17.2461 23.8186 17.1989 23.7763C17.1407 23.7247 17.0895 23.6644 17.0455 23.5963C16.9345 23.4257 16.8707 23.1995 16.844 22.9294C16.8385 22.8762 16.8298 22.8261 16.8282 22.7682C16.8267 22.7001 16.8274 22.6296 16.8306 22.5569C16.8306 22.5553 16.8298 22.5545 16.8306 22.5529C16.8337 22.5373 16.8385 22.5169 16.8416 22.4997C16.8589 22.4222 16.8778 22.3299 16.8967 22.2234C16.8975 22.2179 16.8991 22.2117 16.8999 22.2054C16.9054 22.1741 16.9101 22.1397 16.9148 22.1076C16.9211 22.07 16.9274 22.0356 16.9329 21.9949C16.9841 21.6411 16.9927 21.3452 16.9738 21.0979C16.9644 20.9703 16.9471 20.8552 16.9243 20.7527C16.8574 20.4505 16.7432 20.251 16.6307 20.1195C16.5551 20.0326 16.4804 19.9762 16.4206 19.9402C16.2545 19.84 16.0782 19.8001 15.8995 19.8056C15.8106 19.8079 15.7201 19.8212 15.6304 19.8447C15.2251 19.9457 14.8205 20.229 14.4868 20.5046C14.449 20.5351 14.4128 20.5656 14.3782 20.5961C14.3514 20.6118 14.3215 20.629 14.2893 20.6454C14.1933 20.6963 14.0744 20.7464 13.9579 20.7816C13.9194 20.7934 13.8808 20.8028 13.8438 20.8106C13.806 20.8184 13.7706 20.8239 13.736 20.8263C13.7021 20.8286 13.6699 20.8278 13.6408 20.8239C13.6116 20.8192 13.5857 20.8122 13.5636 20.7996C13.4881 20.7613 13.407 20.6141 13.3732 20.3277L17.3154 16.1753ZM21.9463 13.9532C22.025 13.9172 22.0927 13.8624 22.1431 13.7919L26.6834 7.50665C26.7881 7.42525 27.0832 7.21235 27.4469 7.08633C27.5374 7.05502 27.6326 7.02919 27.7302 7.01119C27.7806 7.00258 27.8309 6.99632 27.8813 6.99319C28.1292 6.9744 28.3858 7.02215 28.6219 7.18965C28.6329 7.19669 28.6431 7.20296 28.6542 7.20922C28.6557 7.21078 28.6573 7.21157 28.6589 7.21313C28.6612 7.2147 28.6636 7.21704 28.666 7.21861C28.6715 7.22252 28.6762 7.22565 28.6801 7.22879C28.6896 7.23661 28.6998 7.24444 28.7108 7.25305C28.7966 7.31488 28.8667 7.38533 28.9257 7.46047C28.98 7.53092 29.0233 7.60606 29.0587 7.68511C29.15 7.88862 29.183 8.11248 29.1807 8.32695C29.1807 8.32929 29.1807 8.33086 29.1807 8.33321C29.1791 8.42244 29.1728 8.50854 29.1626 8.59229C29.1461 8.7277 29.1201 8.85215 29.0949 8.95391C29.0689 9.05566 29.043 9.1355 29.0272 9.18325L24.4876 15.4677C24.4294 15.5476 24.3971 15.6438 24.3947 15.7432L24.3003 19.9457L20.2644 17.0668L18.2457 15.6274L21.9463 13.9532ZM8.13862 27.3847C8.18112 27.7588 8.51089 27.9647 8.86269 27.7988C9.17672 27.65 9.99208 27.0818 10.3415 27.1914C10.7516 27.3197 10.7043 27.6125 10.9428 27.8528C11.2742 28.1862 11.4977 28.3733 11.9966 28.4132C12.2997 28.4367 12.6365 28.2762 12.9285 28.3224C13.7572 28.4523 13.5699 28.7873 13.9131 29.2178C14.2058 29.5865 14.5388 29.7055 15.0055 29.6906C15.4273 29.6765 15.5619 29.527 15.9893 29.7321C16.4449 29.9497 16.4095 30.1853 16.6897 30.5602C16.9416 30.8991 17.2123 31.1355 17.6491 31.2013C18.6416 31.35 19.4695 30.4099 20.1157 29.8057C20.1668 29.7571 20.2022 29.7055 20.2266 29.653C20.2392 29.6577 20.251 29.664 20.2644 29.6679L21.4583 27.7745C21.4851 27.7314 21.5048 27.6853 21.5174 27.6375C21.5182 27.6344 21.5205 27.625 21.5237 27.6125L25.2054 21.1315C25.2227 21.101 25.2353 21.0697 25.2463 21.0368C25.2479 21.0305 25.2495 21.0235 25.2503 21.0165C25.2597 20.9836 25.2652 20.9507 25.2668 20.917C25.2668 20.9116 25.2691 20.9061 25.2691 20.9006L25.3809 15.9178L29.8701 9.70297C29.8929 9.67166 29.9126 9.63722 29.9268 9.60044C29.9614 9.51669 30.7414 7.55048 29.3326 6.4852C29.3271 6.47972 29.3208 6.47502 29.3153 6.47033C29.298 6.45624 29.2806 6.4445 29.261 6.43041C29.2507 6.42258 29.2413 6.41554 29.2311 6.40927C29.2177 6.3991 29.2051 6.38971 29.1909 6.38031C29.1775 6.37092 29.1642 6.36231 29.15 6.35448C27.6869 5.37295 26.0664 6.73489 25.9971 6.79359C25.9672 6.81864 25.9405 6.8476 25.9177 6.87891L21.4158 13.111L17.1383 15.0466C17.047 15.0678 16.9605 15.1147 16.892 15.1867L12.5853 19.7234C12.5515 19.7469 12.5177 19.7719 12.4901 19.804L10.1999 22.4214C10.1463 22.4551 10.0991 22.4981 10.0598 22.5522L8.48492 24.7328C8.44163 24.7657 8.39992 24.8056 8.36529 24.8581C8.31807 24.9293 8.27872 24.9997 8.24172 25.0686L8.20552 25.1203C8.20867 25.1203 8.21182 25.1211 8.21497 25.1218C7.84742 25.867 8.04182 26.53 8.13862 27.3847Z" fill="black"/>
                  </svg>
                </div>

                <div class="menu-btn px-md-3 px-1 py-md-1 py-2 my-0" style="line-height:1px">
                  <svg class="download-pic" name="Download Image." width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 38C29.4934 38 38 29.4934 38 19C38 8.50659 29.4934 0 19 0C8.50659 0 0 8.50659 0 19C0 29.4934 8.50659 38 19 38Z" fill="white"/>
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M8 30H30V27H24.6541L19 28.078L13.6216 27H8V30Z" stroke="black" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M16.2102 5L21.6445 8.82461V15.9302H27L19 24L11 16.0468H16.2102V5Z" stroke="black" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </div>

                <div class="menu-btn px-md-3 px-1 py-md-1 py-2 my-0" style="line-height:1px">
                  <svg class="undo" name="Undo." width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 38C29.4934 38 38 29.4934 38 19C38 8.50659 29.4934 0 19 0C8.50659 0 0 8.50659 0 19C0 29.4934 8.50659 38 19 38Z" fill="white"/>
                  <path d="M29 19.5L10.0373 19.5" stroke="black" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                  <path d="M17 28L10 19.4992L17 11" stroke="black" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </div>

                <div class="menu-btn px-md-3 px-1 py-md-1 py-2 my-0" style="line-height:1px">
                  <svg class="redo" name="Redo." width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 38C29.4934 38 38 29.4934 38 19C38 8.50659 29.4934 0 19 0C8.50659 0 0 8.50659 0 19C0 29.4934 8.50659 38 19 38Z" fill="white"/>
                  <path d="M10 19.5H28.9627" stroke="black" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                  <path d="M22 11L29 19.5008L22 28" stroke="black" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </div>

                <div class="menu-btn px-md-3 px-1 py-md-1 py-2 my-0" style="line-height:1px">
                  <svg class="share-btn" name="Share." width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 38C29.4934 38 38 29.4934 38 19C38 8.50659 29.4934 0 19 0C8.50659 0 0 8.50659 0 19C0 29.4934 8.50659 38 19 38Z" fill="white"/>
                  <path d="M12.934 20.6772L9.59242 23.4811" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
                  <path d="M16.117 21.9225L9.98869 27.0648" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
                  <path d="M19.5775 22.935L9.61892 31.2913" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M31.8338 8.76067L20.1589 8.74039L22.9318 12.0451L15.4123 18.3547L21.9178 21.4239L27.131 17.0495L29.8007 20.2311L31.8338 8.76067Z" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </div>

                <div class="menu-btn px-md-3 px-1 py-md-1 py-2 my-0" style="line-height:1px">
                  <svg class="close-btn" name="Close." width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 38C29.4934 38 38 29.4934 38 19C38 8.50659 29.4934 0 19 0C8.50659 0 0 8.50659 0 19C0 29.4934 8.50659 38 19 38Z" fill="white"/>
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 20.039L14.25 24.789C13.8351 25.204 13.3056 25.3472 13.0674 25.109C12.8292 24.8708 12.9724 24.3413 13.3873 23.9264L18.1373 19.1764L13.2318 14.2708C12.8168 13.8559 12.6736 13.3264 12.9118 13.0882C13.15 12.85 13.6795 12.9932 14.0944 13.4082L19 18.3137L23.9056 13.4082C24.3205 12.9932 24.85 12.85 25.0882 13.0882C25.3264 13.3264 25.1832 13.8559 24.7682 14.2708L19.8627 19.1764L24.6127 23.9264C25.0276 24.3413 25.1708 24.8708 24.9326 25.109C24.6944 25.3472 24.1649 25.204 23.75 24.789L19 20.039Z" fill="black"/>
                  </svg>
                </div>

                        <!-- <div data-toggle="tooltip" data-placement="left" title="Close" class="canvas-btn close-btn border rounded p-1 px-md-3 px-2 m-1"><i class="fas fa-times"></i></div>

                        <div data-toggle="tooltip" data-placement="left" title="Download as .Jpeg" class="download-pic canvas-btn border rounded p-1 px-md-3 px-2 m-1"><i class="fas fa-download"></i></div>

                        <div data-toggle="tooltip" data-placement="left" title="Shift + Ctrl + Z (Redo)" class="redo canvas-btn border rounded p-1 px-md-3 px-2 m-1"><i class="fas fa-redo"></i></div>

                        <div data-toggle="tooltip" data-placement="left" title="Ctrl + Z (Undo)" class="undo canvas-btn border rounded p-1 px-md-3 px-2 m-1"><i class="fas fa-undo"></i></div>

                        <div class="settings-btn border rounded bg-light text-dark p-1 px-md-3 px-2 m-1">
                            <i class="fas fa-cog"></i>
                            <span data-container="body" data-toggle="popover" data-placement="bottom" data-content=".."></span>
                        </div>

                        <div data-toggle="tooltip" data-placement="left" title="Done" class="share-btn canvas-btn border rounded p-1 px-md-3 px-2 m-1"><i class="fas fa-share"></i></div> -->

                </div>

            </div>

        </div>

        <div id="dialog-share" class="container d-flex align-items-center justify-content-center">

              <div class="col-lg-4 col-md-6 col-sm-8 col-12 bg-dark rounded p-3 text-light bg-shadow">

                  <form id="share-form" method="post" action="http://localhost/themepic/save_photo.php" novalidate>

                      <div class="form-group">

                          <div class="d-flex justify-content-between align-items-center">

                              <label for="in-title">Title <span class="text-muted">(Optional)</span></label>

                              <small class="text-warning pl-2 text-right"><label for="in-title" generated="true" class="error"></label></small>

                          </div>

                          <input name="in-title" type="text" class="form-control" id="in-title" aria-describedby="emailHelp" placeholder="Fall of titans">

                          <div class="pt-1">

                              <small class="text-muted">Title is recommended as it will help you find your notes easily</small>

                          </div>

                      </div>

                      <div class="form-group">

                          <label for="in-link">Your Link</label>

                          <div class="p-2 bg-white rounded">
                              <div class="d-none"><i class="far fa-copy"></i></div>
                              <code id="link2page" class="text-dark"></code>
                          </div>

                          <div class="pt-1">

                              <small class="text-muted">Visible to you only till you publish</small>

                          </div>

                      </div>

                      <button type="button" class="publish-btn btn btn-info">Publish</button>
                      <button type="button" class="edit-btn btn btn-outline-light">Edit</button>

                      <div class="position-absolute text-right" style="right:20px; bottom:20px; z-index: 12">
                        <small class="saving badge badge-pill badge-light saving-data shadow d-none">saving data <span>.</span><span>.</span><span>.</span> </small>
                        <small class="saving badge badge-pill badge-light saving-image d-none">saving image <span>.</span><span>.</span><span>.</span></small>
                        <small class="saving badge badge-pill badge-light saving-thumbnail d-none">saving thumbnail <span>.</span><span>.</span><span>.</span></small>
                        <small class="badge badge-pill badge-success saving-done saving-badge"><i class="fas fa-check-circle"></i> Saved</small>
                      </div>

                  </form>

              </div>

          </div>

        <img class="image-for-storage position-absolute" id="blah" src="" alt="" style="top: -9999px; left: -9999px; opacity: 0">
        <img class="thumbnail position-absolute" id="" src="" alt="" style="top: -9999px; left: -9999px; opacity: 0">

        <canvas id="canvas-for-storage" style="top: -9999px; left: -9999px; opacity: 0"></canvas>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        <script src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <script type="text/javascript" src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.7/jquery.validate.min.js"></script>
        <script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.0/additional-methods.js"></script>
        <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
    		<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/TweenMax.min.js" type="text/javascript"></script>
    		<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/TimelineLite.min.js" type="text/javascript"></script>

        <script type="text/javascript">

            $(document).ajaxStop(function() {
              $('.saving-done').removeClass('d-none');
            });

            $( document ).ajaxStart(function(e) {
              $('.saving-done').addClass('d-none');
            });

            var canvas = document.getElementById('myCanvas');
            var context = canvas.getContext('2d');
            let circleAndNo = $('.circleAndNo:eq(-1)').hide();
            let clicking = false;
            let x;
            let sliderValue = 50;
            let fitcanvas = fitToContainer(canvas);
            let markerOnCanvasClicked = false;
            let oneInProgress = false;
            let sliderVal = $('.slider').val();
            let mouseEnteredPopOverAlready = false;
            let eventSequence = new Array();

            let wht = $(window).height();
            let wwt = $(window).width();

            let undoNredo = new command();

            let allFunctions = [];

            let undoneFunctions = [];

            function command(instance) {

                this.DOMelem = '';
                this.data1 = '';
                this.arrayData = [];
                this.arrayData2 = [];
                this.undoresult = [];
                this.freshresults = [];
                this.executedResult = '';

                this.executeInCommand = function execute(DOM, data1, data2) {

                    this.DOMelem = DOM
                    this.data1 = data1;
                    this.arrayData.push(data2);
                    allFunctions.push(instance);
                    this.executedResult = instance.execute(DOM, data1, data2);

                };

                this.undoInCommand = function undo() {

                    if (!(allFunctions.length)) return 'no function in undo array';
                    var command = allFunctions.pop();
                    undoneFunctions.push(command);
                    circleAndNo.hide().css({
                        opacity: 1
                    });
                    return command.undo();


                };

                this.redoInCommand = function redo() {

                    if (!(undoneFunctions.length)) return 'no function in redo array';
                    var command = undoneFunctions.pop();
                    allFunctions.push(command);
                    circleAndNo.hide().css({
                        opacity: 1
                    });
                    return command.redo();

                };

            }

            function fitToContainer(canvas) {
                //				Make it visually fill the positioned parent
                canvas.style.width = '100%';
                canvas.style.height = '100%';
                // 				...then set the internal size to match
                canvas.width = canvas.offsetWidth;
                canvas.height = canvas.offsetHeight;
            }

            function getMousePos(canvas, evt) {
                var rect = canvas.getBoundingClientRect();

                return {
                    x: evt.clientX - rect.left,
                    y: evt.clientY - rect.top
                };
            }

            function storeEvent() {

                let oldVisibleDOM = $.grep($('.detailBox'), function(item) {

                    if ($(item).css('display') != 'none') {

                        return item;

                    }

                })

                let oldVisibleBigDOM = ($.grep($('.detailBox-Big'), function(item) {

                    if ($(item).css('display') != 'none') {

                        return item;

                    }

                }))

                eventSequence.push({

                    event: 'Last Small Box Position or Big Box',
                    oldPosnElem: $(oldVisibleDOM[0]).css(['top', 'right', 'bottom', 'left']) || oldVisibleBigDOM[0]

                })

                return eventSequence;

            }

            $(document).ready(function() {

                wht = $(window).height();
                wwt = $(window).width();

                $('.saving-div').css({width:wwt,height:wht});

                $('.btn-container').height(wht);

                $('.upload-image-box').height(wht / 1.5);

                $('[data-toggle="popover"]').popover({

                    animation: true,

                });

                $('[data-toggle="tooltip"]').tooltip();

                $("#dialog-final").dialog({
                    resizable: false,
                    height: 'auto',
                    width: 'auto',
                    position: {
                        my: "center top",
                        at: "center top",
                        of: window
                    },
                    //					modal: true,
                    autoOpen: false,
                    appendTo: ".btn-container",
                    show: {
                        effect: "fade",
                        duration: 150
                    },
                })

                $("#dialog-uploadImage").dialog({
                    resizable: false,
                    height: 'auto',
                    width: 'auto',
                    position: {
                        my: "center",
                        at: "center",
                        of: window
                    },
                    autoOpen: false,
                    appendTo: ".btn-container",
                    show: {
                        effect: "fade",
                        duration: 100
                    }
                });

                $("#dialog-share").dialog({
                    resizable: false,
                    height: 'auto',
                    width: 'auto',
                    position: {
                        my: "center",
                        at: "center",
                        of: window
                    },
                    modal: true,
                    autoOpen: false,
                    appendTo: ".btn-container",
                    show: {
                        effect: "fade",
                        duration: 500
                    }
                });

            })

            canvas.addEventListener('mousemove', function(evt) {

                if (oneInProgress) {

                    $('#myCanvas').css({
                        'cursor': 'not-allowed'
                    });
                    return;

                };

                $('#myCanvas').css({
                    'cursor': 'copy'
                })

                circleAndNo.show();

                var mousePos = getMousePos(canvas, evt);

                let leftOfCanvas = $('.image').position().left;

                circleAndNo.css({
                    top: mousePos.y,
                    left: mousePos.x
                });

                let visibleCircles = $.grep($('.circleAndNo'), function(item) {

                    if ($(item).css('display') != 'none') {
                        return item;
                    };

                })

                circleAndNo.children('elem').html(visibleCircles.length);

            }, false);

            function getEditFormatOfPopover() {

                return `
<h6 class="">Add Comment</h6>

<textarea rows="3" class="popTextArea px-2 w-100 border border-dark rounded text-dark" placeholder="It happened before summers... (min 5 characters)"></textarea>

<div class="d-flex justify-content-between align-items-center">

<span class="deletecircleAndNo text-center"><i class="fas fa-times px-2"></i></span>
<button class="popBtn btn btn-sm btn-dark no-active" disabled>Save</button>

            </div>
`;

            }

            let createEditablePopover = new command({

                execute: function() {

                    let circleNo = createEditablePopover.DOMelem;

                    $(circleNo).data({
                        editFlag: true
                    }).children('span').popover('show');

                    let elem = getEditFormatOfPopover();

                    $('.popover').removeClass('hover-pop custom-dark-popover bg-dark');

                    $('.popover-body:eq(-1)').html(elem);

                    createEditablePopover.freshresults.push(circleNo);

                    eventSequence.push({
                        event: 'editable popover created',
                        markerDOM: circleNo
                    })

                    oneInProgress = true;

                    return 'Editable popover is created';

                },

                undo: function() {

                    let circleNo = createEditablePopover.freshresults.pop();

                    createEditablePopover.undoresult.push(circleNo);

                    $(circleNo).data({
                        editFlag: false
                    }).children('span').popover('hide');

                    oneInProgress = false;

                    return 'editable pop up hides';

                },

                redo: function() {

                    let circleNo = createEditablePopover.undoresult.pop();

                    createEditablePopover.freshresults.push(circleNo);

                    $(circleNo).data({
                        editFlag: true
                    }).children('span').popover('show');;

                    let elem = getEditFormatOfPopover();

                    $('.popover').removeClass('hover-pop custom-dark-popover bg-dark');

                    $('.popover-body:eq(-1)').html(elem);

                    oneInProgress = true;

                    undoNredo.redoInCommand();

                    return 'editable pop up shows';

                }

            })

            let markerCreated = new command({

                execute: function() {

                    let DOM = markerCreated.DOMelem;
                    let event = markerCreated.data1;

                    circleAndNo.clone().prependTo('.circles-here');

                    let mousePos = getMousePos(DOM, event);
                    let percentX = mousePos.x / $(DOM).width();
                    let percentY = mousePos.y / $(DOM).height();
                    let mFontSize = $('.circleAndNo:eq(0)').css('font-size').slice(0, -2) / $(DOM).width();
                    let mHeight = $('.circleAndNo:eq(0)').height() / $(DOM).width();
                    let mWidth = $('.circleAndNo:eq(0)').width() / $(DOM).width();

                    $('.circleAndNo:eq(0)').css({
                        'z-index': 11
                    }).data({
                        'percentX': percentX,
                        'percentY': percentY,
                        'mFontSize': mFontSize,
                        'mHeight': mHeight,
                        'mWidth': mWidth
                    });

                    let visibleCircles = $.grep($('.circleAndNo'), function(item) {

                        if ($(item).css('display') != 'none') {
                            return item;
                        };

                    })

                    circleAndNo.children('elem').html(visibleCircles.length);

                    markerCreated.freshresults.push($('.circleAndNo:eq(0)')[0]);

                    eventSequence.push({
                        event: 'marker created',
                        markerDOM: $('.circleAndNo:eq(0)')[0]
                    });

                    return $('.circleAndNo:eq(0)')[0];

                },

                undo: function() {

                    let circleNo = markerCreated.freshresults.pop();

                    markerCreated.undoresult.push(circleNo);

                    $(circleNo).hide();

                    reDrawCanvasMarkers();

                    store_circle_data();

                    return 'circle on canvas is hide()';

                },

                redo: function() {

                    let circleNo = markerCreated.undoresult.pop();

                    markerCreated.freshresults.push(circleNo);

                    $(circleNo).show();

                    reDrawCanvasMarkers();

                    oneInProgress = true;

                    return 'circle on canvas is show()'

                }

            })

            function reDrawCanvasMarkers() {

                let visibleCircles = $.grep($('.circleAndNo'), function(item) {

                    if ($(item).css('display') != 'none') {

                        return item;

                    };

                })

                let totalMarkersOnCanvas = visibleCircles.length;

                $.each(visibleCircles, function(key, value) {

                    $(this).children('elem').html(totalMarkersOnCanvas - key)

                })

                $('.circleAndNo').last().children('elem').html(totalMarkersOnCanvas + 1);

                return true;

            }

            canvas.addEventListener('mousedown', function(evt) {

                if (oneInProgress) {
                    return
                };

                markerCreated.executeInCommand(this, evt);

                let circleNo = markerCreated.executedResult;

                createEditablePopover.executeInCommand(circleNo);

            }, false); // MARKER PLOTTING IN CANVAS

            canvas.addEventListener('mouseleave', function(evt) {

                circleAndNo.hide();

            });

            $(document).on('mouseenter mouseleave', '.circleAndNo', function(e) {

                $(this).toggleClass('bg-dark').toggleClass('bg-light');

                if ($(this).data().editFlag || !($(this).data().comment)) {
                    return
                };

                $(this).children().popover('toggle');

                $('.popover:eq(-1)').addClass('hover-pop custom-dark-popover bg-dark');

                let elem = `
<div class="text-here p-2 w-100 bg-dark rounded text-light">` + $(this).data('comment') + `</div>
<div class="px-2"><small class="text-muted notify-in-pop py-2 text-light text-left">Press to edit or delete</small></div>
`;

                $('.popover-body:eq(-1)').html(elem);

                if (oneInProgress) {

                    $('.notify-in-pop').html('An edit is open');

                }

            })

            $(document).on('shown.bs.popover', '.circleAndNo', function(e) {

                let el = $('.popover:eq(-1)').css('transform');

                function getTransform(el) {

                    var results = el.match(/matrix(?:(3d)\(\d+(?:, \d+)*(?:, (\d+))(?:, (\d+))(?:, (\d+)), \d+\)|\(\d+(?:, \d+)*(?:, (\d+))(?:, (\d+))\))/)

                    if (!results) return [0, 0, 0];
                    if (results[1] == '3d') return results.slice(2, 5);
                    results.push(0);
                    return results.slice(5, 8);

                }

                let popHeight = parseInt(getTransform(el)[1], 10) + $('.popover:eq(-1)').height();

                if (popHeight >= $(document).height() * 0.9) {

                    $('.custom-dark-popover .arrow').remove();

                }

                $('#dynamic').remove();

                let popId = '#' + $(this).find('span').attr('aria-describedby');

                if ($(popId).last().attr('x-placement') == 'bottom') {

                    $("<style type='text/css' id='dynamic' />").appendTo("head");

                    $("#dynamic").text(`

.custom-dark-popover .arrow::after {


border-bottom-color: #343a40;


}`

                                      );

                } else {

                    $("<style type='text/css' id='dynamic' />").appendTo("head");

                    $("#dynamic").text(`

.custom-dark-popover .arrow::after {


border-top-color: #343a40;


}`

                                      );

                }


            })

            $(document).on('click', '.circleAndNo', function() {

                if (oneInProgress) {
                    return
                };

                createEditablePopover.executeInCommand(this);

                placeCircleDatainTextArea($(this).data().comment);

            })

            function placeCircleDatainTextArea(comment) {

                $('.popTextArea:eq(-1)').html(comment);

                if ($('.popTextArea:eq(-1)').val().length > 4) {

                    $('.popBtn:eq(-1)').removeAttr('disabled', 'disabled');

                }

            }

            $(document).on('keyup', '.popTextArea', function() {

                if (!(($(this).val().length) >= 5)) {

                    $('.popBtn').attr('disabled', 'disabled');

                    return

                }

                $('.popBtn').removeAttr('disabled');

            })

            let dataAmendinPop = new command({

                execute: function(DOMelem) {

                    dataAmendinPop.freshresults.push($(DOMelem).data().comment);

                    return true;

                },

                undo: function() {

                    let currentData = $('.popTextArea').val();

                    dataAmendinPop.undoresult.push(currentData);

                    let oldData = dataAmendinPop.freshresults.pop();

                    if (!oldData) {

                        undoNredo.undoInCommand();

                        return 'No data found so cleared the textarea';

                    }

                    $('.popTextArea').val(oldData);

                    $('.popBtn').removeAttr('disabled');

                    return 'Old value replaced in textarea';

                },

                redo: function() {

                    let currentData = $('.popTextArea').val();

                    if (currentData) {

                        dataAmendinPop.freshresults.push(currentData);

                    }

                    let newData = dataAmendinPop.undoresult.pop();

                    $('.popTextArea').val(newData);

                    $('.popBtn').removeAttr('disabled');

                    return 'New value placed in textarea';

                }


            })

            let popGoesHidden = new command({

                execute: function(DOMelem, notReq, newData) {

                    let circleNo = $('[aria-describedby="' + $(DOMelem).closest('.popover').attr('id') + '"]').closest('.circleAndNo');

                    oneInProgress = false;

                    $(circleNo).data({
                        comment: newData,
                        editFlag: false
                    }).children('span').popover('hide');

                    circleAndNo.css({
                        opacity: 1
                    });

                    popGoesHidden.freshresults.push(circleNo);

                    return true;

                },

                undo: function() {

                    let circleNo = popGoesHidden.freshresults.pop();

                    popGoesHidden.undoresult.push(circleNo);

                    let prvsData = popGoesHidden.arrayData.pop();

                    popGoesHidden.arrayData2.push(prvsData);

                    $(circleNo).data({
                        comment: prvsData,
                        editFlag: true
                    }).children('span').popover('show');

                    let elem = getEditFormatOfPopover();

                    $('.popover').removeClass('custom-dark-popover bg-dark');

                    $('.popover-body:eq(-1)').html(elem);

                    placeCircleDatainTextArea(prvsData);

                    oneInProgress = true;

                    return 'Popover editable format is opened now';

                },

                redo: function() {

                    oneInProgress = false;

                    let circleNo = popGoesHidden.undoresult.pop();

                    popGoesHidden.freshresults.push(circleNo);

                    let prvsData = popGoesHidden.arrayData2.pop();

                    popGoesHidden.arrayData.push(prvsData);

                    $(circleNo).data({
                        comment: prvsData,
                        editFlag: false
                    }).children('span').popover('hide');

                    store_circle_data();

                    return 'Popover goes hide';


                }

            })

            let givedatatotextbox = function() {

                let comments = new Array();

                let smallelem = ``;
                let bigelems = ``;

                $.each($('.circleAndNo'), function(key, value) {

                    if ($(this).data().comment && $(this).css('display') != 'none') {

                        comments[$(this).find('elem').html() - 1] = $(this).data().comment;

                    }

                })

                let needColAdjustments = false;

                $('.detailBox-Big').find('.rounded-bottom').children().remove();

                $('.detailBox').children().remove();

                $.each(comments, function(key, value) {

                    smallelem = `<span class="small-elem border-right px-1">` + (key + 1) + `</span>`;

                    bigelems = `<div class="big-text-here col-md-4 col-sm-6 col-12 text-left p-2">
<span class="badge badge-light">` + (key + 1) + `</span>
<small>` + value + `</small>
            </div>`;

                    $('.detailBox').append(smallelem);

                    $('.detailBox-Big').find('.rounded-bottom').append(bigelems);

                    $('.big-text-here').last().data({
                        textLength: value.length,
                        textBlock: Math.floor(key / 3)
                    });

                    if (value.length > 125) {

                        needColAdjustments = true;

                    }

                })

                $('.small-elem:eq(-1)').removeClass('border-right');

                if (!needColAdjustments) {

                    return;

                }

                needColAdjustments = false;

                let spaceAval = 12;
                let rowNo = 0;
                let rowAlloted = 0;
                let cArray = [];
                let rowArray = [];

                $.each($('.big-text-here'), function(key, value) {

                    let currentBlock = $(value).data().textBlock;

                    let sumLength = 0;

                    let totalSize = $.grep($('.big-text-here'), function(item) {

                        if ($(item).data().textBlock == currentBlock) {

                            sumLength += $(item).data().textLength;

                        }

                    });

                    let ownPercent = $(value).data().textLength / sumLength * 100;

                    let ineed = function() {

                        if (ownPercent <= 60) {

                            return 4;

                        }

                        if (ownPercent <= 90) {

                            return 8;

                        }

                        if (ownPercent <= 100) {

                            return 12;

                        }

                    }

                    let giveSpace = function(needed, item) {

                        if (needed <= spaceAval) {

                            spaceAval = spaceAval - needed;

                            cArray.push(item);

                            return rowNo;

                        }

                        cArray = [];

                        rowNo = rowNo + 1;

                        spaceAval = 12;

                        return giveSpace(needed, item);

                    }

                    let needed = ineed();

                    rowAlloted = giveSpace(needed, $(this));

                    $(this).data({
                        neededSpace: needed,
                        rowAlloted: rowAlloted
                    });

                    rowArray[rowAlloted] = cArray;

                });

                $.each(rowArray, function(key, value) {

                    let className = function() {

                        if (value.length == 1) {

                            value[0].toggleClass('col-md-4 col-md-12 col-sm-6 col-sm-12');

                            return 'col-md-12';

                        }

                        if (value.length == 3) {

                            value[2].toggleClass('col-sm-6 col-sm-12');
                            return 'col-md-4';

                        }

                        if (value.length == 2) {

                            if (value[0].data().neededSpace == value[1].data().neededSpace) {

                                value[0].toggleClass('col-md-4 col-md-6');
                                value[1].toggleClass('col-md-4 col-md-6');

                                return 'col-md-6 col-md-6';

                            }

                            if (value[0].data().neededSpace == 8) {

                                value[0].toggleClass('col-md-4 col-md-8');

                                return 'col-md-8 col-md-4';

                            }

                            value[1].toggleClass('col-md-4 col-md-8');

                            return 'col-md-4 col-md-8';


                        }

                    }

                    className();

                });

                $('.blackish-overlay').css({top:0,height:heightOfOpenWindow()});

            };

            let heightOfOpenWindow = () => { return Math.max($('body')[0].scrollHeight, $('#for-printing')[0].scrollHeight) };

            $('.blackish-overlay').on('click',function() {

              console.log('clicked black');
              $('.menu-btn:eq(1)>svg').trigger('click');
              $('.menu-btn:eq(1)>svg').trigger('mouseleave');

              if ($('#dialog-final').dialog('isOpen')) return;

              $(".ui-dialog-content").dialog("close");
              $('.blackish-overlay').css({
                display: 'none',
              });

            })

            $(document).on('mouseenter mouseleave', '.small-elem', function() {

                let serNo = parseInt($(this).html());

                let thisCircle = $.grep($('.circleAndNo'), function(item) {

                    return $(item).find('elem').html() == serNo;

                })

                $(thisCircle).trigger('mouseenter');

                $(this).toggleClass('bg-light text-dark');

            })

            $(document).on('mouseenter mouseleave', '.big-text-here', function() {

                let serNo = parseInt($(this).find('.badge').html());

                let thisCircle = $.grep($('.circleAndNo'), function(item) {

                    return $(item).find('elem').html() == serNo;

                })

                $(thisCircle).trigger('mouseenter');

                $(this).toggleClass('bg-light text-dark');

            })

            $(document).on('click', '.popBtn', function() {

                let oldData = $('[aria-describedby="' + $(this).closest('.popover').attr('id') + '"]').closest('.circleAndNo').data().comment;

                let newData = $('.popTextArea').val();

                if (oldData != newData) {

                    let circleNo = $('[aria-describedby="' + $(this).closest('.popover').attr('id') + '"]').closest('.circleAndNo');

                    dataAmendinPop.executeInCommand(circleNo, false, false);

                    eventSequence.push({

                        event: 'data amended in textArea',
                        markerDOM: circleNo,
                        data: oldData

                    })

                }

                popGoesHidden.executeInCommand(this, false, newData);

                store_circle_data();

                eventSequence.push({

                    event: 'Edit Pop goes hidden',
                    markerDOM: $('[aria-describedby="' + $(this).closest('.popover').attr('id') + '"]').closest('.circleAndNo'),
                    data: newData

                })

            })

            $(document).on('mouseenter mouseleave', '.deletecircleAndNo', function() {

                $(this).toggleClass('border rounded text-light').siblings('.popBtn').toggleClass('btn-dark btn-light').closest('.popover').toggleClass('bg-dark text-light custom-dark-popover').find('.popTextArea').toggleClass('text-dark text-light bg-dark border-light border-dark').siblings('h6').toggleClass('text-light').parent('.popover');

                $('[aria-describedby="' + $(this).closest('.popover').attr('id') + '"]').closest('.circleAndNo').toggleClass('bg-dark bg-light');

            })

            let markerDeleted = new command({

                execute: function() {

                    let DOM = markerDeleted.DOMelem;

                    oneInProgress = false;

                    $('[aria-describedby="' + $(DOM).closest('.popover').attr('id') + '"]').closest('.circleAndNo').hide();

                    $(DOM).closest('.popover').remove();

                    reDrawCanvasMarkers();

                    return $('[aria-describedby="' + $(DOM).closest('.popover').attr('id') + '"]').closest('.circleAndNo');

                },

                undo: function() {

                    let circleAndNo = markerDeleted.executedResult;

                    oneInProgress = true;

                    $(circleAndNo).removeClass('bg-dark bg-light').show();

                    reDrawCanvasMarkers();

                    let comment = circleAndNo.data().comment;

                    $(circleAndNo).children('span').popover('show');

                    let elem = getEditFormatOfPopover();

                    $('.popover').removeClass('custom-dark-popover bg-dark');

                    $('.popover-body:eq(-1)').html(elem);

                    $('.circleAndNo:eq(0)').data({
                        editFlag: true
                    });

                    $('.popTextArea').val(comment);

                    if (comment && comment.length > 4) {

                        $('.popBtn').removeAttr('disabled');

                    }

                    return 'editable popover no entry yet';

                },

                redo: function() {

                    let circleAndNo = markerDeleted.executedResult;

                    oneInProgress = false;

                    $(circleAndNo).hide().children('span').popover('hide');

                    reDrawCanvasMarkers();

                    store_circle_data();

                    return 'marker deleted again';

                }

            })

            $(document).on('click', '.deletecircleAndNo', function() {

                eventSequence.push({
                    event: 'marker deleted',
                    markerDOM: $('[aria-describedby="' + $(this).closest('.popover').attr('id') + '"]').closest('.circleAndNo')
                });

                markerDeleted.executeInCommand(this, false);

                store_circle_data();

            })

            $(document).on('mouseenter mouseleave', '.canvas-btn', function() {

                $(this).toggleClass('bg-light text-dark');

            }) // SIDE BAR BUTTONS

            $(document).on('click', '.settings-btn', function() {

                mouseEnteredPopOverAlready = true;

                // $(this).toggleClass('bg-light text-dark');

                let popId = '#' + $(this).children('span').popover('toggle').attr('aria-describedby');

                $(popId).children('.popover-header').html(`Setting's`).addClass('bg-dark custom-popover-header');

                $(popId).children('.arrow').css({
                    visibility: 'hidden'
                });

                let elem = `



<div class="pb-2 border-bottom d-flex justify-content-center flex-wrap align-items-center">

<div class="marker-circle rounded-circle bg-info text-light border-light d-flex align-items-center justify-content-center mx-1">1</div>
<div class="marker-circle rounded-circle bg-warning text-dark border-light d-flex align-items-center justify-content-center mx-1">2</div>
<div class="marker-circle rounded-circle bg-light text-dark border-light d-flex align-items-center justify-content-center mx-1">3</div>
<div class="marker-circle rounded-circle bg-dark border-light text-light d-flex align-items-center justify-content-center mx-1">4</div>
<div class="marker-circle rounded-circle bg-primary border-light text-light d-flex align-items-center justify-content-center mx-1">5</div>
<div class="marker-circle rounded-circle bg-danger border-light text-light d-flex align-items-center justify-content-center mx-1">6</div>
<div class="marker-circle rounded-circle bg-success border-light text-light d-flex align-items-center justify-content-center mx-1">7</div>

</div>

<div class="py-3 border-bottom d-flex justify-content-center flex-wrap align-items-center">

<input class="slider w-100" type="range" min="1" max="100" value="50">

            </div>

<div class="py-2 text-center d-flex justify-content-center flex-wrap align-items-center">

<div class="w-100 d-flex">

<div class="box box-right-bottom border border-dark rounded mx-1">

<div class="rtbt-subBox w-50 bg-dark border h-25 position-absolute rounded"></div>

            </div>

<div class="box box-left-bottom border border-dark rounded mx-1">

<div class="ltbt-subBox w-50 bg-dark border h-25 position-absolute rounded"></div>

            </div>

<div class="box box-left-top border border-dark rounded mx-1">

<div class="lttp-subBox w-50 bg-dark border h-25 position-absolute rounded"></div>

            </div>

<div class="box box-right-top border border-dark rounded mx-1">

<div class="rttp-subBox w-50 bg-dark border h-25 position-absolute rounded"></div>

            </div>

<div class="box box-big-bottom border border-dark rounded mx-1">

<div class="bgbt-subBox w-100 bg-dark border rounded-bottom h-50 position-absolute"></div>

            </div>

            </div>

            </div>



`;
                $(popId).children('.popover-body').html(elem);

                let currentht = $('.circleAndNo').css('height');
                let fontSize = $('.circleAndNo').css('font-size');
                let fontWeight = $('.circleAndNo').css('font-weight');

                $('.marker-circle').css({
                    height: '1.7rem',
                    width: '1.7rem',
                    'font-size': '90%',
                    'font-weight': 'bold',
                    cursor: 'pointer'
                });

                $('.circleAndNo:eq(-1)').css({
                    top: '50%',
                    left: '50%'
                }).show();

                $('.slider').css({
                    cursor: 'pointer'
                });

                if (typeof sliderVal != 'undefined') {

                    $('.slider').val(sliderVal);

                } else {

                    $('.slider').val(50);

                }

                $(document)
                    .on('mouseenter', popId, function() {

                    mouseEnteredPopOverAlready = true;

                })
                    .on('mouseleave', popId, function() {

                    mouseEnteredPopOverAlready = false;
                    $('.settings-btn').toggleClass('bg-light text-dark');
                    $('.settings-btn').children('span').popover('hide')
                    $('.circleAndNo:eq(-1)').hide();

                })

            })

            let markerSizeChanged = new command({

                execute: function() {

                    sliderVal = $('.size-circle').html();
                    if (sliderVal < '10') sliderVal = '40';

                    circleAndNo.css({
                        'font-size': sliderVal / 50 * 80 + '%',
                        'height': sliderVal / 50 * 1.7 + 'rem',
                        'width': sliderVal / 50 * 1.7 + 'rem'
                    });

                    let presentCircleDims = circleAndNo.css(['font-size', 'height', 'width']);

                    return true;

                },

                undo: function() {

                    let prvsSliderValue = markerSizeChanged.arrayData.pop();

                    //					$('.circleAndNo:eq(-1)').css({top:'50%',left:'50%'}).show();

                    $('.circleAndNo:eq(-1)')
                        .show()
                        .stop(true, true)
                        .css({
                        top: '50%',
                        left: '50%',
                        opacity: 0
                    })
                        .animate({
                        opacity: 1
                    }, 0)
                        .animate({
                        opacity: 1
                    }, 2000)
                        .animate({
                        opacity: 0
                    }, 30);

                    circleAndNo.css(prvsSliderValue);

                    markerSizeChanged.undoresult.push(prvsSliderValue);

                    return 'Undo marker size';

                },

                redo: function() {

                    let prvsSliderValue = markerSizeChanged.undoresult.pop();

                    //					$('.circleAndNo:eq(-1)').css({top:'50%',left:'50%'}).show();

                    $('.circleAndNo:eq(-1)')
                        .show()
                        .stop(true, true)
                        .css({
                        top: '50%',
                        left: '50%',
                        opacity: 0
                    })
                        .animate({
                        opacity: 1
                    }, 0)
                        .animate({
                        opacity: 1
                    }, 2000)
                        .animate({
                        opacity: 0
                    }, 30);

                    circleAndNo.css(prvsSliderValue);

                    markerSizeChanged.arrayData.push(prvsSliderValue);

                    return 'Redo marker size';

                }

            })

            $(document).on('change', '.slider', function() {

                eventSequence.push({

                    event: 'marker size changed',
                    markerDOM: circleAndNo,

                })

                let presentCircleDims = circleAndNo.css(['font-size', 'height', 'width']);

                markerSizeChanged.executeInCommand(false, false, presentCircleDims);



            })

            let markerThemeChanged = new command({

                execute: function() {

                    let DOMelem = markerThemeChanged.DOMelem;

                    let fullClassesNew = DOMelem.classList;

                    let foundClassesNew = $.grep(fullClassesNew, function(item) {

                        if (item.indexOf('bg-') != -1 || item.indexOf('text-') != -1) {

                            return item

                        }

                    })

                    foundClassesNew = foundClassesNew.join(' ');

                    let str = $('.circleAndNo').attr('class');

                    var fullClassesOld = str.split(' ');

                    let foundClassesOld = $.grep(fullClassesOld, function(item) {

                        if (item.indexOf('bg-') != -1 || item.indexOf('text-') != -1) {

                            return item

                        }

                    })

                    foundClassesOld = foundClassesOld.join(' ');

                    eventSequence.push({

                        event: 'bg- and text- changed',
                        oldClass: foundClassesOld,
                        newClass: foundClassesNew

                    })

                    let combinedClassNames = foundClassesNew + ' ' + foundClassesOld;

                    $('.circleAndNo').toggleClass(combinedClassNames);

                    let classNames = {

                        old: foundClassesOld,
                        new: foundClassesNew

                    }

                    markerThemeChanged.freshresults.push(classNames);

                    return combinedClassNames;

                },

                undo: function() {

                    let classes = markerThemeChanged.freshresults.pop();

                    $('.circleAndNo:eq(-1)')
                        .show()
                        .stop(true, true)
                        .css({
                        top: '50%',
                        left: '50%',
                        opacity: 0
                    })
                        .removeClass(classes.new)
                        .addClass(classes.old)
                        .animate({
                        opacity: 1
                    }, 0)
                        .animate({
                        opacity: 1
                    }, 2000)
                        .animate({
                        opacity: 0
                    }, 30);

                    markerThemeChanged.undoresult.push(classes);

                },

                redo: function() {

                    let classes = markerThemeChanged.undoresult.pop();

                    $('.circleAndNo:eq(-1)')
                        .show()
                        .stop(true, true)
                        .css({
                        top: '50%',
                        left: '50%',
                        opacity: 0
                    })
                        .removeClass(classes.old)
                        .addClass(classes.new)
                        .animate({
                        opacity: 1
                    }, 0)
                        .animate({
                        opacity: 1
                    }, 2000)
                        .animate({
                        opacity: 0
                    }, 30);

                    markerThemeChanged.freshresults.push(classes);

                }

            })

            $(document).on('click', '.marker-circle', function() {

                markerThemeChanged.executeInCommand(this);


            })

            $(document).on('click', '.box-right-top', function() {

                let event = storeEvent();

                $('.detailBox-Big').hide();
                $('.detailBox').show().addClass('d-flex');
                $('.detailBox').css({
                    left: '',
                    right: '2%',
                    top: '2%',
                    bottom: ''
                }).attr({ctr:1});

            })

            $(document).on('click', '.box-left-top', function() {

                let event = storeEvent();

                $('.detailBox-Big').hide();
                $('.detailBox').show().addClass('d-flex');
                $('.detailBox').css({
                    left: '2%',
                    right: '',
                    top: '2%',
                    bottom: ''
                }).attr({ctr:0});;

            })

            $(document).on('click', '.box-left-bottom', function() {

                let event = storeEvent();

                $('.detailBox-Big').hide();
                $('.detailBox').show().addClass('d-flex');
                $('.detailBox').css({
                    left: '2%',
                    right: '',
                    top: '',
                    bottom: '2%'
                }).attr({ctr:2});;

            })

            $(document).on('click', '.box-right-bottom', function() {

                let event = storeEvent();

                $('.detailBox-Big').hide();
                $('.detailBox').show().addClass('d-flex');
                $('.detailBox').css({
                    left: '',
                    right: '2%',
                    top: '',
                    bottom: '2%'
                }).attr({ctr:3});;

            })

            $(document).on('click', '.box-big-bottom', function() {

                let event = storeEvent();

                $('.detailBox').attr({ctr:4}).hide().removeClass('d-flex')
                $('.detailBox-Big').show();

            })

            $(document).on('click', 'body', function() {

                if (mouseEnteredPopOverAlready) {
                    return
                };

                $('.settings-btn').children('span').popover('hide');

            })

            $(document).on('click', '.undo', function() {

                undoNredo.undoInCommand();

            })

            $(document).on('click', '.redo', function() {

                undoNredo.redoInCommand();

            })

            $(document).on('mouseleave', '.undo', function() {

                $('.circleAndNo:eq(-1)').css({
                    opacity: 1
                }).hide();

            })

            $(document).on('mouseleave', '.redo', function() {

                $('.circleAndNo:eq(-1)').css({
                    opacity: 1
                }).hide();

            })

            function printcommand(instance) {

                this.array = [];

                this.execute = function execute(bool_textreq) {

                    this.array.push(instance);
                    instance.execute(bool_textreq);

                }

                this.undo = function undo(instance) {

                    let command = this.array.pop();
                    command.undo();

                }

            }

            let printhidendisplay = new printcommand({

                execute: function(textreq) {

                    let imgWt = $('.image').width();

                    console.log($('.custom-hide').find('.circleAndNo:eq(0)').css('height'));

                    let elem = $('#for-printing').clone().addClass('custom-hide');

                    $('body').append(elem);

                    $('.custom-hide').css({width:imgWt,overflow:'visible'});

                    if (!(textreq)) {

                        return $('.custom-hide').children('.detailBox-Big').remove();

                    }

                    // $('.custom-hide').children('.detailBox').remove();

                },

                undo: function() {

                    $('.custom-hide').remove();

                }

            });

            $(document).on('click', '.download-pic', function(e) {

                let aTag = `<a class="aTag" style="display:none">Click Me</a>`;

                $('body').append(aTag);

                printhidendisplay.execute(true);

                let div = $('.custom-hide')[0];

                // let div = $('#for-printing')[0];

                console.log();

                html2canvas(div, {

                    useCORS: true,
                    backgroundColor: 'null',
                    scale: 2,

                }).then(function(drawnPic) {

                    let link = drawnPic.toDataURL('image/jpeg');

                    $('.aTag:eq(0)').attr({
                        href: link,
                        download: 'newImage'
                    }).click();


                    printhidendisplay.undo();


                });

            })

            $(document).on('click', '.aTag', function(e) {

                this.click();
                this.remove();

            })

            $('.open-btn').click(function() {

                $('.blackish-overlay').css({
                  height: $('body').height(),
                  width: $('body').width(),
                  display: 'block',
                  opacity:0.7,
                });

                $("#dialog-uploadImage").dialog('open');

            })

            $('.close-btn').click(function() {

                $("#dialog-final").dialog('close');

                window.location.reload(true);

            })

            let spinner = {

                start: function() {

                    let elem = `
<div class="modal-spinner">

<div class="d-flex h-100 align-items-center">
<div class="progress col-2 p-0 mx-auto" style="height: 0.4rem">
<div class="progress-bar progress-bar-striped progress-bar-animated bg-info" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
            </div>
            </div>

            </div>`;

                    $('body').append(elem);

                },

                end: function() {

                    $('.modal-spinner').remove();

                }

            }

            $('.edit-btn').click(function() {

                $("#dialog-final").dialog('open');

                $("#dialog-share").dialog('close');

            })

            $('.validate-image-exists').validate({

                rules: {
                    'image-link': {

                        required: true,
                        url: true,

                    }

                },
                messages: {

                    'image-link': {

                        required: '<i class="text-warning fas fa-exclamation-circle"></i> This url is required',
                        url: '<i class="text-warning fas fa-exclamation-circle"></i> a url looks just like a website e.g. "http://www.something.com"',

                    }

                }

            })

            $('.card').on('click', function() {

              let myArray = $(this).find('.draft-badge').attr('class').split(' ');

              if ($.inArray('Published', myArray) !== -1) {
                let picId = $(this).find('.card-image-top').attr('data-id');
                return window.location.assign(`/picture/${picId},{{token}}`);
              };

              spinner.start();

              let imageData = $(this).find('.card-image-top').attr('data-comments');
              let imageURL = $(this).find('.card-image-top').attr('data-image');
              let imageID = $(this).find('.card-image-top').attr('data-id');

              if (imageData) {
                dataforimageexists.status = true;
                dataforimageexists.data = JSON.parse(imageData);
              }

              let card = this;


              $('.blackish-overlay').css({display: 'block',height: heightOfOpenWindow(),width: $('body').width()}).animate({
                opacity:0.7
              }, 50, function() {
                $("#dialog-final").dialog('open');
                $('.image').attr({
                  src: $(card).find('.card-image-top').attr('data-image'),
                  firstLoad: false
                }).data({public_id: imageID});
              });

              spinner.end();

            })

            let dataforimageexists = new Object();
            dataforimageexists.status = false;

            $('.image').on('load', function(e) {

                $(this).css({
                    'max-height': wht / 1.1,
                    'max-width': '100%'
                });

                let imgWt = $(this).outerWidth();
                let imgHt = $(this).outerHeight();

                if (imgHt < 0) return console.log('.image height is less then 0 so stopping resetting of canvas size.');

                $('.carry-menu').height(imgHt);

                if (wwt < 767 || imgHt < 300) {

                    $('.carry-menu').height('auto');

                }

                $('.circles-here').css({
                    height: imgHt,
                    width: imgWt,
                    'z-index': 9,
                });

                $('.detailBox-Big').css({
                    width: imgWt,
                });

                $('.detailBox').css({
                    right: '2%',
                    bottom: '2%'
                });

                spinner.end();

                if (!($(this).data().public_id)) {

                    $('.saving-image').removeClass('d-none').animate({opacity: 1}, 500, 'linear');

                    let data = {
            					"query": 'uploadImage',
            					"token": `{{token}}`,
                      "status": "Draft",
                      "img": $(this).attr('src'),
            				};

            				data = JSON.stringify(data);

            				$.ajax({
            				    url: '/loggedin',
            				    type: 'post',
            				    data,
            				    headers: {
            				        'content-type': 'application/json',
            				    }
            					}).done((res) => {
                        $(this).data({'public_id':res.public_id, 'thumbnail_saved': true});
                        update_image_table_db('save_draft');
                        $('.saving-image').addClass('d-none').animate({opacity: 1}, 500, 'linear');
            					}).fail((e) => {
            						console.log('ERROR', e.responseText);
            					});

                } else if ($(this).attr('firstLoad') === 'true') {

                  update_image_table_db('save_draft');

                };

                if (dataforimageexists.status) {

                    let elem = `<div class="circleAndNo rounded-circle bg-info text-light" ><span data-container="body" data-toggle="popover" data-placement="top" data-content="content..."></span><elem>1</elem></div>`;

                    let obj = dataforimageexists.data;

                    $.each(obj, function(key, value) {

                        let newObj = value.data;

                        $('.circles-here').prepend(elem);

                        $('.circleAndNo:eq(0)').css({
                            'z-index':11,
                            left: newObj.percentX * $('.image').width() + $('.image').position().left,
                            top: newObj.percentY * $('.image').height(),
                            'font-size': newObj.mFontSize * $('.image').width(),
                            height: newObj.mHeight * $('.image').width(),
                            width: newObj.mWidth * $('.image').width()
                        }).data({
                            'percentX': newObj.percentX,
                            'percentY': newObj.percentY,
                            'mFontSize': newObj.mFontSize,
                            'mHeight': newObj.mHeight,
                            'mWidth': newObj.mWidth,
                            comment: value.comment,
                            editFlag: false
                        }).find('elem').html(value.label);

                        $('.circleAndNo').removeClass().addClass(newObj.classs);

                    })

                    let fullClassesNew = $('.circleAndNo').attr('class').split(' ');

                    let foundClassesNew = $.grep(fullClassesNew, function(item) {

                        if (item.indexOf('bg-') != -1 || item.indexOf('text-') != -1) {

                            return item

                        }

                    })

                    foundClassesNew = foundClassesNew.join(' ');

                    givedatatotextbox();

                    dataforimageexists.status = false;

                };

            });

            $('.thumbnail').on('load', function() {

              var StorageCanvas = document.getElementById('canvas-for-storage');

              var ctx = StorageCanvas.getContext("2d");

              var img = $('.thumbnail')[0];

              ctx.drawImage(img, 0, 0);

              var MAX_WIDTH = 450;
              var MAX_HEIGHT = 2500;
              var width = img.width;
              var height = img.height;

              if (width > height) {
                  if (width > MAX_WIDTH) {
                      height *= MAX_WIDTH / width;
                      width = MAX_WIDTH;
                  }
              } else {
                  if (height > MAX_HEIGHT) {
                      width *= MAX_HEIGHT / height;
                      height = MAX_HEIGHT;
                  }
              };
              StorageCanvas.width = width;
              StorageCanvas.height = height;
              var ctx = StorageCanvas.getContext("2d");
              ctx.drawImage(img, 0, 0, width, height);
              var dataurl = StorageCanvas.toDataURL("image/png");

              let public_id = $('.image').data().public_id;

              $('.saving-thumbnail').removeClass('d-none').animate({opacity: 1}, 500, 'linear');

              let data = {
                "query": 'uploadThumbnail',
                "public_id": public_id,
                "token": `{{token}}`,
                "img": dataurl,
              };

              data = JSON.stringify(data);

              $.ajax({
                  url: '/loggedin',
                  type: 'post',
                  data,
                  headers: {
                      'content-type': 'application/json',
                  }
                }).done((res) => {
                  $('.saving-thumbnail').addClass('d-none').animate({opacity: 1}, 500, 'linear');
                }).fail((e) => {
                  console.log('error', e.responseText);
                });

            });

            function readURL(input) {

                if (input.files && input.files[0] && (/\.(jpe?g|png)$/i.test(input.files[0].name))) {

                    var reader = new FileReader();

                    reader.addEventListener("load", function(e) {

                        $('#imgPreview').attr('src', reader.result).css({
                            'max-height': '100%',
                            'max-width': '100%'
                        });

                        $('.preview-image-box').show().addClass('d-flex').animate({

                            opacity: 1,

                        }, 500, 'linear');

                        $('.image-for-storage').attr({
                            src: reader.result
                        });

                    })

                    reader.readAsDataURL(input.files[0]);

                } else {

                    $('#upload-error').remove();

                    let elem = `<div id="upload-error" class="mt-2"><small><i class="text-warning fas fa-exclamation-circle"></i> Oops this file is not an image.</small></div>`;

                    $('.upload-error-here').append(elem);

                    $('#upload-error').fadeIn();

                }

            }

            $("#imgInp").change(function() {

                readURL(this);

            });

            $('.image-for-storage').on('load', function() {

                ConvertImageandStoreImageInCloudinary();

            })

            let ConvertImageandStoreImageInCloudinary = function() {

                var StorageCanvas = document.getElementById('canvas-for-storage');

                var ctx = StorageCanvas.getContext("2d");

                var img = $('.image-for-storage')[0];

                ctx.drawImage(img, 0, 0);

                var MAX_WIDTH = 1200;
                var MAX_HEIGHT = 800;
                var width = img.width;
                var height = img.height;

                if (width > height) {
                    if (width > MAX_WIDTH) {
                        height *= MAX_WIDTH / width;
                        width = MAX_WIDTH;
                    }
                } else {
                    if (height > MAX_HEIGHT) {
                        width *= MAX_HEIGHT / height;
                        height = MAX_HEIGHT;
                    }
                };

                StorageCanvas.width = width;
                StorageCanvas.height = height;
                var ctx = StorageCanvas.getContext("2d");
                ctx.drawImage(img, 0, 0, width, height);

                function isTainted(ctx) {
                    try {
                        //                        var pixel = ctx.getImageData(0, 0, 1, 1);
                        var dataurl = ctx.toDataURL("image/png");
                        return false;
                    } catch (err) {
                        return (err.code === 18);
                    }
                }

                if (isTainted(StorageCanvas)) {

                    $('.ok-btn-box .error-span').find('small').html('<i class="text-warning fas fa-exclamation-circle"></i> Sorry, canvas is tainted! I will save these images in local database. Wait a moment please.');

                    let data = {
                      "query": 'uploadImage',
                      "token": `{{token}}`,
                      "status": "Draft",
                      "img": $("#image-link").val(),
                    };

                    data = JSON.stringify(data);

                    $.ajax({
                        url: '/loggedin',
                        type: 'post',
                        data,
                        headers: {
                            'content-type': 'application/json',
                        }
                      }).done((res) => {
                        $('.image').data({'public_id':res.public_id}).attr({src: res.image});
                        $('.saving-image').addClass('d-none').animate({opacity: 1}, 500, 'linear');
                      }).fail((e) => {
                        console.log('error', e.responseText);
                      });

                    return true;

                }

                var dataurl = StorageCanvas.toDataURL("image/png");

                $('.image').attr({
                    src: dataurl
                });

                return;

            }

            $('.next-upload-btn').on('click', function() {

                $('#upload-error').remove();

                $("#dialog-final").dialog('open');

                $("#dialog-uploadImage").dialog('close');

                $('.image').attr({
                    firstLoad: true
                });

                $('.image').trigger('load');

            })

            $('.ok-btn').on('click', function(e) {

                if (!($(".validate-image-exists:eq(0)").valid())) {

                    $('.ok-btn-box').find('.error-span').show();

                    return;

                }

                $('.saving-image').removeClass('d-none').animate({opacity: 1}, 500, 'linear');

                $('.image-for-storage').attr({
                    src: $("#image-link").val()
                });

                $('.ok-btn-box').find('.error-span').css({
                    display: 'none'
                });

                $("#dialog-final").dialog('open');

                $("#dialog-uploadImage").dialog('close');

                $('.image').attr({
                    firstLoad: true
                });

                return 'dialog final is being opened';

            })

            $('.change-upload-btn').on('click', function() {

                $('.preview-image-box').animate({

                    opacity: 0,

                }, 100, "linear", function() {

                    $(this).hide().removeClass('d-flex');

                })

            })

            $('.share-btn').click(function() {

                spinner.start();

                update_image_table_db();

            })

            let update_image_table_db = function(call) {

                $('.saving-thumbnail').removeClass('d-none').animate({opacity: 1}, 500, 'linear');

                if ($('.image').height() < 10) {

                    return;

                }

                let aTag = `<a class="aTag" style="display:none">Click Me</a>`;

                $('body').append(aTag);

                printhidendisplay.execute(false);

                let div = document.querySelector('.custom-hide');

                html2canvas(div, {

                    useCORS: true,
                    backgroundColor: 'null',
                    scale: 1,
                    logging: false

                }).then(function(drawnPic) {

                    let dataUrl = drawnPic.toDataURL('image/jpeg');
                    $('.thumbnail').attr({src: dataUrl});
                    printhidendisplay.undo();

                    if (call == 'save_draft') {

                        return;

                    }

                    spinner.end();

                    $('#link2page').html(`https://${window.location.hostname}/${$('.image').data().public_id}`);

                    $('.share-btn').tooltip('hide');

                    $("#dialog-final").dialog('close');

                    $("#dialog-share").dialog('open');

                  });

                return true;
            };

            let store_circle_data = function() {

                givedatatotextbox();

                let circleData = new Array();

                let circlesOnDOM = $('.circleAndNo').each(function() {

                    if ($(this).data().comment && $(this).css('display') != 'none') {

                        $(this).data({
                            classs: $(this).attr('class')
                        });

                        circleData.push({
                            data: $(this).data(),
                            label: $(this).children('elem').html(),
                            comment: $(this).data().comment,
                        });

                    }

                });

                update_image_table_db('save_draft');

                $('.saving-data').removeClass('d-none').animate({opacity: 1}, 500, 'linear');

                let imageData = JSON.stringify(circleData);

                let data = {
                  "query": 'updateImageData',
                  "public_id": $('.image').data().public_id,
                  "token": `{{token}}`,
                  "imageData": imageData
                };

                data = JSON.stringify(data);

                $.ajax({
                    url: '/loggedin',
                    type: 'post',
                    data,
                    headers: {
                        'content-type': 'application/json',
                    }
                  }).done((res) => {
                    $('.saving-data').addClass('d-none').animate({opacity: 1}, 500, 'linear');
                  }).fail((e) => {
                    console.log(e.responseText);
                  });

            }

            let images_cloudinary = new Object();



            $('.publish-btn').on('click', function() {

                let data = {
                  "query": 'updateImageStatus',
                  "public_id": $('.image').data().public_id,
                  "token": `{{token}}`,
                  "status": 'Published',
                  "title" : $('#in-title').val(),
                  "ctr": $('.detailBox').attr('ctr'),
                };

                data = JSON.stringify(data);

                $.ajax({
                    url: '/loggedin',
                    type: 'post',
                    data,
                    headers: {
                        'content-type': 'application/json',
                    }
                  }).done((res) => {
                    $('.saving-data').addClass('d-none').animate({opacity: 1}, 500, 'linear');
                    $('.saving-done').html('<i class="fas fa-check-circle"></i> Published');
                    let picId = $('.image').data().public_id;
                    return window.location.assign(`/picture/${picId},{{token}}`);
                  }).fail((e) => {
                    console.log(e.responseText);
                  });

            });

            var $grid = $('.grid').masonry({

                itemSelector: '.grid-item',
                initLayout: true

            });

            $('.contribution-btn').on('click', function() {

                $('.badge-success').closest('.grid-item').show();

                $('.badge-danger').closest('.grid-item').show();

                $grid.masonry('layout');


            })

            $('.drafts-btn').on('click', function() {

                $('.Published').closest('.grid-item').hide();

                $('.Draft').closest('.grid-item').show();

                $grid.masonry('layout');

            })

            $('.published-btn').on('click', function() {

                $('.Published').closest('.grid-item').show();

                $('.Draft').closest('.grid-item').hide();

                $grid.masonry('layout');

            })

            $('.back-btn').on('mouseenter mouseleave', function() {

                $(this).toggleClass('text-info', 50);

            })

            $('.upload-textarea-wrapper textarea').on('focusin', function() {

                $('.upload-textarea-wrapper').find('.text-center').css({
                    opacity: 0.05
                });
                $('.upload-textarea-wrapper').find('.ok-btn-box').css({
                    display: 'block',
                    opacity: 1
                });

            })

            $('body').on('click', function(e) {

                if ($(e.target).is('.ok-btn')) {

                    return;

                }

                // Clicking outside textarea will trigger c-event
                if (!($(e.target).is('.upload-textarea-wrapper textarea'))) {

                    $('.upload-textarea-wrapper textarea').trigger('c-event');

                }

            })

            $('.upload-textarea-wrapper textarea').on('c-event', function() {

                if ($(this).val() == '') {

                    $('.upload-textarea-wrapper').find('.text-center').css({
                        opacity: 1
                    });
                    $('.upload-textarea-wrapper').find('.ok-btn-box').css({
                        display: 'none',
                        opacity: 0
                    });

                }

            })

            $('.delete-badge').on('mouseenter mouseleave', function() {
              $(this).toggleClass('text-secondary text-warning').siblings('.card').toggleClass('bg-dark bg-warning');
            });

            $('.delete-badge').on('click', function() {

              let data = {
                "query": 'deleteImage',
                "token": `{{token}}`,
                "public_id": $(this).siblings('.card').find('.card-image-top').attr('data-id'),
              };

              data = JSON.stringify(data);

              $.ajax({
                  url: '/loggedin',
                  type: 'post',
                  data,
                  headers: {
                      'content-type': 'application/json',
                  }
                }).done((res) => {
                  window.location.reload(true);
                }).fail((e) => {
                  console.log('ERROR', e.responseText);
                });
            });

            $(window).on("load", function() {
              console.log('All images loaded');
              $grid.masonry('layout');
            });

            $('.menu-btn>svg').on('mouseenter mouseleave',function(e){
              if ($('.menu-btn:eq(1)').data().state) return console.log('already clicked');
              let label = $(this).attr('name');
              if (label == 'Marker Settings.') {
                $('.menu-caption').toggleClass('bg-black').find('.marker-posn').toggleClass('d-none d-flex').siblings('span');
              }
              $('.menu-caption').toggleClass('d-none d-block').find('span').html(label);
              if (label == 'Text Position.') $('.menu-caption').toggleClass('bg-black').find('.text-posn').toggleClass('d-none d-block');
              $(this).find('path').each(function() {
                let oldstroke = $(this).attr('stroke');
                let oldfill = $(this).attr('fill');
                if (oldstroke) $(this).attr('stroke',inverse(oldstroke));
                if (oldfill) $(this).attr('fill',inverse(oldfill));
              });
              $('.blackish-overlay').toggleClass('o-active o-inactive');
            });

            let inverse = (x) => {
              if (x == 'black') return 'white';
              return 'black';
            };

            $('.menu-btn>svg').on('click',function() {
              let label = $(this).attr('name');
              if (label == 'Marker Settings.') {
                var nextstate = $(this).parent('.menu-btn').data().state;
                $(this).parent('.menu-btn').data({state: !nextstate}).siblings('.menu-btn').toggleClass('disappear'); // Toggled state not being assigned to .menu-btn here
                $('.menu-caption').toggleClass('bg-black bg-light').find('span').toggleClass('text-black');
              };
              if (label == 'Text Position.') {
                var tl6 = new TimelineLite();
        				let ctr = $(this).parent('.menu-btn').attr('ctr');
                ctr++;
        				if (ctr == 4) {
        					$(this).parent('.menu-btn').attr({ctr:-1});
        					$('.detailBox').toggleClass('d-none d-flex');
        					$('.detailBox-Big').css({display:'block'});
        					tl6.to(`.banner-inBox`,0.05,{fill:'#DADADA', ease:Power2.easeInOut})
        						 .to(`.banner-lines`,0.05,{stroke:'black', ease:Power2.easeInOut});
        					return console.log('done');
        				};
        				$('.detailBox-Big').css({display:'none'});
        				console.log(ctr);
        				let myData = $(`.banner-inBox:eq(${ctr})`).attr('data-show-text').split(' ');
        				$('.detailBox').css({left:'',right:'',top:'',bottom:'',[myData[1]]: '2%',[myData[2]]: '2%'}).removeClass('d-none').addClass('d-flex');
        				tl6.to(`.banner-inBox:eq(${ctr})`,0.05,{fill:'black', ease:Power2.easeInOut})
        					 .to(`.banner-lines`,0.05,{stroke:'#DADADA', ease:Power2.easeInOut})
        					 .to($(`.banner-inBox:eq(${ctr})`).attr('fill','black').siblings('.banner-inBox'),0.05,{fill:'#DADADA',ease:Power2.easeInOut});
        				$(this).parent('.menu-btn').attr({ctr});
              }
            });

            $('.size-canvas').on('mousemove mousedown',function(e) {
              if (e.which == 1 || e.type == 'mousedown') {
                let mousePos = getMousePos(this,e);
                let value = Math.abs(mousePos.x/$(this).width()*100);
                $('.size-circle').css({left:`${value}%`}).html(Math.floor(value));

                eventSequence.push({

                    event: 'marker size changed',
                    markerDOM: circleAndNo,

                })

                let presentCircleDims = circleAndNo.css(['font-size', 'height', 'width']);

                markerSizeChanged.executeInCommand(false, false, presentCircleDims);
              };

            });

        </script>

    </body>

</html>
